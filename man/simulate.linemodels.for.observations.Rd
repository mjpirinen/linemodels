% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linemodels.R
\name{simulate.linemodels.for.observations}
\alias{simulate.linemodels.for.observations}
\title{Simulate a data set from the observed data and given set of line models}
\usage{
\method{simulate}{linemodels.for.observations}(X, SE, linemodels.results = NULL, scales, slopes, cors, r.lkhood = 0)
}
\arguments{
\item{X}{matrix of effect sizes with two columns (one col per trait)}

\item{SE}{matrix of standard errors with two columns (one col per trait)}

\item{scales}{vector of standard deviations of larger effect of each model}

\item{slopes}{vector of slopes of each model}

\item{cors}{vector of correlation parameters of each model}

\item{r.lkhood}{correlation between estimators of the two effects}

\item{model.priors}{vector of prior probabilities of models up to a normalization constant}
}
\value{
matrix of simulated effect sizes with one column per trait and one row per observation in X
}
\description{
See help of 'line.models( )' for details about specifying the models.
}
\details{
Generates effect estimates for each observed data point as follows.
Pick up an underlying line model based on the given probabilities (default is uniform probabilities).
Choose the primary coordinate to be x if the slope of the chosen model is in [-1,1],
otherwise choose y as the primary coordinate.
For the primary coordinate, choose the true effect size from the univariate posterior
distribution given the observed estimate, its SE and the prior N(0, scale),
where 'scale' is the scale parameter of the corresponding line model.
Project the point on the line based on the primary coordinate.
Rotate the point to be on the diagonal line y=x.
Pick uniformly at random one coordinate to be perturbed and
 sample the true effect of the chosen coordinate from the line model, conditional
 on the current value of the other coordinate.
Rotate the perturbed point back to correspond to the original slope.
Finally, sample the observed effects from a bivariate Gaussian around the true values
by accounting for SEs and r.lkhood.
}
\examples{
simulate.linemodels.for.observations(
   X = linemodels.ex1[,1:2], SE = linemodels.ex1[,3:4],
   scales = c(0.25, 0.25),
   slopes = c(0, 1),
   cors = c(0.995, 0.995))
}

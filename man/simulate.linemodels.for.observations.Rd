% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linemodels.R
\name{simulate.linemodels.for.observations}
\alias{simulate.linemodels.for.observations}
\title{Simulate a data set mimicking the observed multi-dimensional data given a set of linemodels}
\usage{
\method{simulate}{linemodels.for.observations}(
  X,
  SE,
  linemodel.prob = NULL,
  scales,
  slopes,
  cors,
  r.lkhood = rep(0, ncol(X) * (ncol(X) - 1)/2)
)
}
\arguments{
\item{X}{matrix of estimates with M columns (one col per effect variable and one row per observation)}

\item{SE}{matrix of standard errors with M columns (one col per effect variable and one row per observation)}

\item{linemodel.prob}{matrix of probabilities of each observation (row) in each model (col) up to a normalization constant}

\item{scales}{K-vector of standard deviations of the largest effect, one per each linemodel}

\item{slopes}{Kx(M-1)-matrix of slopes, one row per linemodel
If M = 2, can be given also as a K-vector of slopes, one per each linemodel}

\item{cors}{K-vector of correlation parameters, one per each linemodel}

\item{r.lkhood}{correlation matrix of the estimators of the M effects
can be given also as a vector of the upper triangular values in the row-major order}
}
\value{
matrix of simulated observations with one column per effect variable and one row per observation in X
}
\description{
See help of 'line.models( )' for details about specifying the models.
}
\details{
Generates M-dimensional estimates for each observed data point as follows.
Pick up an underlying linemodel based on the given probabilities (default uniform probabilities).
Choose the primary coordinate to be the one with the largest expected magnitude based on the slopes.
For the primary coordinate, choose the true effect size from the univariate posterior
 distribution given the observed univariate estimate, its SE and the prior N(0, scale),
 where 'scale' is the scale parameter of the corresponding linemodel.
Project the point on the line based on the primary coordinate.
Rotate the point to be on the diagonal line.
Pick uniformly at random one coordinate to be kept fixed,
 sample the true effect of the remaining M-1 coordinates from the linemodel,
 conditional on the current value of the fixed coordinate.
Rotate the perturbed point back to correspond to the original slope.
Finally, sample the observed effect estimates from a Gaussian around the true values
by accounting for SEs and r.lkhood.
}
\examples{
#2D example
simulate.linemodels.for.observations(
   X = linemodels.ex1[,c("beta1","beta2")], SE = linemodels.ex1[,c("se1","se2")],
   scales = c(0.25, 0.25),
   slopes = c(0, 1),
   cors = c(0.995, 0.995))
#3D example
simulate.linemodels.for.observations(
   X = linemodels.ex1[,c("beta1","beta2","beta3")], SE = linemodels.ex1[,c("se1","se2","se3")],
   scales = c(0.25, 0.25),
   slopes = rbind(c(0, 0), c(1,1)),
   cors = c(0.995, 0.95))
}
